#include<pthread.h>

pthread_t
pthread_create() - reference 4 parameters
pthread_join() - 2 param
pthread_detach() - 1 param
pthread_exit() - 1 param(NULL)
pthread_self() - No param

pthread_cancel() - 1 param
pthread_kill()
pthread_equal()

NOTE: Only pthread_create() uses thread as reference

strucnt pthread_create(pthread_t *thread, const pthread_attr_t *attr,
                          void *(*start_routine) (void *), void *arg);

int pthread_join(pthread_t thread, void **retval); //This api makes the main thread to wait till the thread(passed as argument) exits
int pthread_detach(pthread_t thread);
void pthread_exit(void *retval);
pthread_t pthread_self(void);

int pthread_cancel(pthread_t thread); //This sends a cancellation request to thread which is the argument in pthread_cancel
int pthread_kill(pthread_t thread, int sig);

struct sched_param
{
int sched_priority;
};

int pthread_setschedparam(pthread_t thread, int policy,
                                 const struct sched_param *param);
int pthread_getschedparam(pthread_t thread, int *policy,
                                 struct sched_param *param);

policy:
SCHED_FIFO
SCHED_RR
SCHED_OTHER
