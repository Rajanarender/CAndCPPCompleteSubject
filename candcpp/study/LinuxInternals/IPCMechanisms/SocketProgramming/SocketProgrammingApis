TCP:
socket() - This creates an endpoint for communication and returns a descriptor.
int socket(int domain, int type, int protocol);

domain:
       AF_INET             IPv4 Internet protocols          
       AF_INET6            IPv6 Internet protocols 
       AF_UNIX, AF_LOCAL   Local communication            

type:
SOCK_STREAM
SOCK_DGRAM
SOCK_RAW

protocol:
0

eg:
socket(AF_INET,SOCK_STREAM,0); //Creation socket of IpV4 Tcp type
socket(AF_INET6,SOCK_STREAM,0); //Creation socket of IpV6 Tcp type
socket(AF_INET,SOCK_RAW,0); //Creation socket of IpV4 Udp type

bind() - Used to assign a local address to the created socket
int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);

listen() - listens for connections on socket
int listen(int sockfd, int backlog);
backlog - this is the max number of client connections that server can connect at a time

int accept(int sockfd, struct sockaddr *addr, socklen_t *addrlen);
ssize_t read(int fd, void *buf, size_t count);
ssize_t write(int fd, void *buf, size_t count);

int connect(int sockfd, const struct sockaddr *addr,socklen_t addrlen); //same as bind()

int close(int sockfd);

UDP:

ssize_t send(int sockfd, const void *buf, size_t len, int flags);

ssize_t sendto(int sockfd, const void *buf, size_t len, int flags,
                      const struct sockaddr *dest_addr, socklen_t addrlen);

ssize_t recv(int sockfd, void *buf, size_t len, int flags);

ssize_t recvfrom(int sockfd, void *buf, size_t len, int flags,
                        struct sockaddr *src_addr, socklen_t *addrlen);



